/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.frames;

import com.DAO.PermissionDAO;
import com.DAO.RoleDAO;
import com.DAO.RolePermissionDAO;
import com.DAOImpl.PermissionDAOImpl;
import com.DAOImpl.RoleDAOImpl;
import com.DAOImpl.RolePermissionDAOImpl;
import static com.frames.AssignPermissionFrame.roleId;
import com.pojos.Permission;
import com.pojos.Role;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Turab Bajeer
 */
public class AssignPermissionFrame extends javax.swing.JFrame {

    /**
     * Creates new form AssignPermissionFrame
     */
    public AssignPermissionFrame() {
        initComponents();
        setLocation(0, 0);
        showAllUnassignedPermissions();
        fillRoleCombo();
    }

    PermissionDAO permissionDAOImple = new PermissionDAOImpl();
    RoleDAO roleDAOImpl = new RoleDAOImpl();
    DefaultListModel<String> unAssignedModel = new DefaultListModel<>();
    DefaultListModel<String> assignedModel = new DefaultListModel<>();
    RolePermissionDAO rolePermissionDAOImpl = new RolePermissionDAOImpl();
    
    static Integer item = null;
    static Integer roleId = null;
    Role r = null;
    Permission p = null;
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roleCombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        unAssignedPermissions = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        assignedPermissions = new javax.swing.JList<>();
        AssignPermissionButton = new javax.swing.JButton();
        removeAllPermissionButton = new javax.swing.JButton();
        removePermissionButton = new javax.swing.JButton();
        assignAllPermissionButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roleCombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roleCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Grant Permissions");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Unassigned Permissions");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Assigned Permissions");

        unAssignedPermissions.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        unAssignedPermissions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        unAssignedPermissions.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        unAssignedPermissions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unAssignedPermissionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(unAssignedPermissions);

        assignedPermissions.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        assignedPermissions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignedPermissions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignedPermissionsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(assignedPermissions);

        AssignPermissionButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AssignPermissionButton.setText(">");
        AssignPermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignPermissionButtonActionPerformed(evt);
            }
        });

        removeAllPermissionButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        removeAllPermissionButton.setText("<<");
        removeAllPermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllPermissionButtonActionPerformed(evt);
            }
        });

        removePermissionButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        removePermissionButton.setText("<");
        removePermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePermissionButtonActionPerformed(evt);
            }
        });

        assignAllPermissionButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        assignAllPermissionButton.setText(">>");
        assignAllPermissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignAllPermissionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assignAllPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeAllPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removePermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AssignPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(166, 166, 166)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(AssignPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(removePermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(assignAllPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(removeAllPermissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane2)
        );

        backButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(289, 289, 289))
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(525, 525, 525)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1))
                    .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new HomeFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void roleComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboActionPerformed

        if (roleCombo.getSelectedIndex() == 0) {
            assignedModel.clear();
            unAssignedModel.clear();
            showAllUnassignedPermissions();
            // showAllUnassignedPermissions();
        } else {
            assignedModel.clear();
            String role = roleCombo.getSelectedItem().toString();
            roleId = roleDAOImpl.getRoleIdByName(role);


            fillLists();
        }

    }//GEN-LAST:event_roleComboActionPerformed

    private void AssignPermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignPermissionButtonActionPerformed
        
        if(unAssignedPermissions.getSelectedValue() == null || roleCombo.getSelectedIndex() == 0){
                
        }else{
            String perm = unAssignedPermissions.getSelectedValue();
            p = permissionDAOImple.getPermissionById(permissionDAOImple.getPermissionIdByName(perm));
            r = roleDAOImpl.getRoleById(roleId);
            
            rolePermissionDAOImpl.addRollPermission(r, p);
            fillLists();
///System.out.println("value: "+perm);
        }
        
    }//GEN-LAST:event_AssignPermissionButtonActionPerformed

    private void unAssignedPermissionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unAssignedPermissionsMouseClicked
        item = unAssignedPermissions.getSelectedIndex();
    }//GEN-LAST:event_unAssignedPermissionsMouseClicked

    private void assignedPermissionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignedPermissionsMouseClicked
        item = assignedPermissions.getSelectedIndex();
    }//GEN-LAST:event_assignedPermissionsMouseClicked

    private void removePermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePermissionButtonActionPerformed
        
        if(assignedPermissions.getSelectedValue() == null || roleCombo.getSelectedIndex() == 0){
        
        }else{
        String perm = assignedPermissions.getSelectedValue();
        p = permissionDAOImple.getPermissionById(permissionDAOImple.getPermissionIdByName(perm));
        r = roleDAOImpl.getRoleById(roleId);
        
        Integer rpId = rolePermissionDAOImpl.getRolePermissionId(r, p);
            
        rolePermissionDAOImpl.deleteRollPermission(rpId);
        fillLists();
        }
    }//GEN-LAST:event_removePermissionButtonActionPerformed

    private void assignAllPermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignAllPermissionButtonActionPerformed
        if(roleCombo.getSelectedIndex() == 0){
        
        }else{
        
            int size = unAssignedPermissions.getModel().getSize();
            
            for(int i=0; i<size; i++){
            
                String perm = unAssignedModel.getElementAt(i);
                p = permissionDAOImple.getPermissionById(permissionDAOImple.getPermissionIdByName(perm));
                r = roleDAOImpl.getRoleById(roleId);
        
                Integer rpId = rolePermissionDAOImpl.getRolePermissionId(r, p);
            
                rolePermissionDAOImpl.addRollPermission(r, p);
                
            }
            fillLists();
        }
    }//GEN-LAST:event_assignAllPermissionButtonActionPerformed

    private void removeAllPermissionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllPermissionButtonActionPerformed
        if(roleCombo.getSelectedIndex() == 0){
        
        }else{
        
            int size = assignedPermissions.getModel().getSize();
            
            for(int i=0; i<size; i++){
            
                String perm = assignedModel.getElementAt(i);
                p = permissionDAOImple.getPermissionById(permissionDAOImple.getPermissionIdByName(perm));
                r = roleDAOImpl.getRoleById(roleId);
        
                Integer rpId = rolePermissionDAOImpl.getRolePermissionId(r, p);
            
                rolePermissionDAOImpl.deleteRollPermission(rpId);
                
            }
            fillLists();
        }
    }//GEN-LAST:event_removeAllPermissionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignPermissionFrame().setVisible(true);
            }
        });
    }

    public void showAllUnassignedPermissions() {

        List<Permission> allPermissions = permissionDAOImple.getAllPermission();

        for (int i = 0; i < allPermissions.size(); i++) {

            unAssignedModel.addElement(allPermissions.get(i).getPermission());
        }
        unAssignedPermissions.setModel(unAssignedModel);

    }

    public void fillRoleCombo() {
        List<Role> allRoles = roleDAOImpl.getAllRole();
        roleCombo.addItem("Select Role");
        for (Role r : allRoles) {
            roleCombo.addItem(r.getRoleName());
        }
    }

    public static List<String> PermissionToString(List<Permission> p) {

        List<String> stringList = new ArrayList<>();

        for (Permission per : p) {

            stringList.add(per.getPermission().toString());
        }

        return stringList;
    }
    
    public void fillLists(){
        List<Permission> allAssignedPermissions = permissionDAOImple.getPermissionOf(roleId);
            List<Permission> allPermissions = permissionDAOImple.getAllPermission();

            List<String> allAssignedString = PermissionToString(allAssignedPermissions);

            assignedModel.clear();
            for (Permission p : allAssignedPermissions) {

                assignedModel.addElement(p.getPermission());

            }

            unAssignedModel.clear();
            for (int i = 0; i < allPermissions.size(); i++) {

                if (allAssignedString.contains(allPermissions.get(i).getPermission())) {
                    continue;

                } else {

                    unAssignedModel.addElement(allPermissions.get(i).getPermission());
                }
            }

            unAssignedPermissions.setModel(unAssignedModel);
            assignedPermissions.setModel(assignedModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignPermissionButton;
    private javax.swing.JButton assignAllPermissionButton;
    private javax.swing.JList<String> assignedPermissions;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeAllPermissionButton;
    private javax.swing.JButton removePermissionButton;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JList<String> unAssignedPermissions;
    // End of variables declaration//GEN-END:variables
}
